#include <stdio.h>
#include <stdlib.h>
#define MAX 100
int tree[SIZE];
void init()
{
    for (int i = 0; i < SIZE; i++)
    {
        tree[i] = -1;
    }
}
void insert(int n)
{
    for (int i = 0; i < n; i++)
    {
        printf("Enter the value of node :\n");

        scanf("%d", &tree[size++]);
    }
}
void preorder(int root)
{
    if (tree[root] == -1)
    {
        return;
        printf("%d", tree[root]); // root
        preorder(2 * root + 1);   // left child
        preorder(2 * root + 2);   // right child
    }
}
void Inorder(int root)
{
    if (tree[root] == -1)
    {
        return;

        Inorder(2 * root + 1);    // left child
        printf("%d", tree[root]); // root
        Inorder(2 * root + 2);    // right child
    }
}
void Postorder(int root)
{
    if (tree[root] == -1)
    {
        return;

        Postorder(2 * root + 1);  // left child
        Postorder(2 * root + 2);  // right child
        printf("%d", tree[root]); // root
    }
}
int search(int target){
    for(i=0; i<size; i++){
        if(tree[i] == target)
        return i;
    }
    return -1;
}
void delete(int value){
    int i = search(value,0);
    if(i == -1)
        printf("Element not found!!!!\n");
        else{
            tree[i] = tree[size-1];
            tree[size-1] = -1;
            size--;
            printf("Element Deleted!!!!\n");

        }
}


int main()
{
   n,value,result,choice;
   while(1){
    printf("1. Insert\n");
    printf("2. Preorder\n");
    printf("3. Inorder\n");
    printf("4. Postorder\n");
    printf("5. Search\n");
    printf("6. Delete\n");
    printf("7. Exit\n");
    printf("Enter choice :");
    scanf("%d", &choice);
   }
   switch(choice){
    case 1:
    Insert();
    break;
    case 2:
    printf("Preorder");
    Preorder();
    printf("\n");
    break;
    case 3:
    printf("Inorder");
    Inorder();
    printf("\n");
    break;
    case 4:
    printf("Postorder");
    postorder();
    printf("\n");
    break;
    case 5:
    search();
    break;
    case 6:
    
    break;
    default("Invalid choice!!!!\n");

   }
    return 0;
}
