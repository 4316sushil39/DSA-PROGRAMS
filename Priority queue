#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#define SIZE 100
typedef struct PriorityQueue
{
    int element;
    int priority;
} queue;
PriorityQueue pq[SIZE];
queue pq[SIZE];
int front = -1, count = -1;
int isEmpty()
{
    return (front == -1) ? 1 : 0;
}
int isFull()
{
    return (count == SIZE - 1) ? 1 : 0;
}
void enqueue(int data)
{
    if (isEmpty())
    {
        count = count + 1;
        pq[count].element = priority;
        pq[count].priority = priority;
        front = count;
    }
    else
    {
        int i;
        for (i = front; i <= count; i++)
        {
            if (pq[i].priority < priority)
            {
                for (int j = count; j >= i; j--)
                {
                    pq[i + 1] = pq[i];
                }
                pq[i].element = data;
                pq[i].priority = priority;
                count++;
                break;
            }
        }
        if (i == count + 1)
        {
            pq[i].element = data;
            pq[i].priority = priority;
            count++;
        }
    }
    printf("Elemented inserted!!!!\n");
}
if (i == count + 1)
{
    pq[i].element = data;
    pq[i].priority = priority;
}
int dequeue()
{
    int data = pq[front].element;
    if (front == count)
        front = count = -1;
    else
        front++;
    return data;
}
int peek()
{
    return pq[front].element;
}

int display()
{
    printf("Priority Queue Elements are : \n");
    for (int i = front; i <= count; i++)
    {
        printf(" Element %d : priority %d\n", pq[i].element, pq[i].priority);
    }
}

int main()
{
    while (1)
    {
        printf("-----Priority queue-----\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");

        int choice, data;
        printf("Enter Choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            printf("Enter element: ");
            scanf("%d", &data);
            enqueue(data);
            break;
        case 2:
            data = dequeue();
            if (data != -1)
            {
                printf("%d dequeued from the queue\n", data);
            }
            break;
        case 3:
            data = peek();
            if (data != -1)
            {
                printf("Element at the front of the queue is: %d\n", data);
            }
            break;
        case 4:
            display();
            break;
        case 5:
            exit(0);
        default:
            printf("Invalid choice!!!!\n");
        }
        printf("\n");
    }
    return 0;
}
