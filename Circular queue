#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#define SIZE 5
int queue[SIZE], front = -1, rear = -1;

int isEmpty() {
  return (front=-1)? 1 : 0;
}
int isFull() {
  return ((rear+1)%SIZE == front) ? 1 : 0;
}
void enqueue(int data) {
  rear = (rear)%SIZE;
    queue[rear] = data;
    if(front == -1)
    front=rear;
    printf("Element inserted!!!!\n");
}
int dequeue() {
    int data = queue[front];
    if (front == rear) {
        front = rear = -1; // Queue is empty
    } else {
        front = (front+1)%SIZE;
        return data;
    }
}
int peek() {
    return queue[front];
}

int display() {
    printf("Queue elements are :");
  int i=front;
  while(i!=rear){
    printf("%d ",queue[i]);
    i = (i+1)%SIZE;
   }
   printf("%d", queue[rear]);
}

int main() {
    while (1) {
        printf("-----Circular queue-----\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        
        int choice, data;
        printf("Enter Choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                data = dequeue();
                if (data != -1) {
                    printf("%d dequeued from the queue\n", data);
                }
                break;
            case 3:
                data = peek();
                if (data != -1) {
                    printf("Element at the front of the queue is: %d\n", data);
                }
                break;
            case 4:
                display();
                break;
            case 5:
                exit(0);
            default:
                printf("Invalid choice!!!!\n");
        }
        printf("\n");
    }
    return 0; 
}
